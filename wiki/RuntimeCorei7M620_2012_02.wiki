#summary Benchmark results for an Intel Core i7M620 Processor on 64bit Linux

Comments:

  * Updated, CommonsMath, ojAlgo, EJML, UJMP
  * Only the pure java version of UJMP from the website is used.  Before the author provided a custom version.
  * Added la4j to the benchmark

Links to the results:
  * [#Pure_Java_Libraries Pure Java Results]
    * [#Java:_Basic_Operation_Results Basic Operations]
    * [#Java:_Solving_Linear_Systems Solving Linear Systems]
    * [#Java:_Matrix_Decompositions Matrix Decompositions]
  * [#Mixed_Java_and_Native_Libraries Java and Native Results]
    * [#Mixed:_Basic_Operation_Results Basic Operations]
    * [#Mixed:_Solving_Linear_Systems Solving Linear Systems]
    * [#Mixed:_Matrix_Decompositions Matrix Decompositions]

=Test Environment =

Test Environment:
|| Date || 2012 / 02 ||
|| OS   || Mint 11 64bit ||
|| Kernel || 2.6.38-8 ||
|| CPU  || Core i7 M 620 2.67 GHz - 2 cores - 4 threads ||
|| RAM || 8194 MB ||
|| CPU Cache || 4096 KB ||
|| JVM  || Java HotSpot(TM) 64-Bit Server 1.6.0_30 ||
|| Benchmark || 0.9 ||

Tested Libraries:
|| Name || Version         ||
|| Colt ||  1.2            ||
|| Commons Math || 2.2     ||
|| EJML ||  0.18           ||
|| Jama || 1.0.2           ||
|| JBlas || 1.2.0          ||
|| la4j || 0.2.0           ||
|| MTJ || 0.9.13           ||
|| OjAlgo || 31.10         || 
|| Parallel Colt || 0.9.4  ||
|| UJMP || 0.2.5           ||


= Pure Java Libraries =

These results show the performance of libraries that have code written entirely in Java.

http://java-matrix-benchmark.googlecode.com/svn/wiki/RuntimeCorei7M620_2012_02.attach/summary.png

==Java: Basic Operation Results==

|| http://java-matrix-benchmark.googlecode.com/svn/wiki/RuntimeCorei7M620_2012_02.attach/add.png || http://java-matrix-benchmark.googlecode.com/svn/wiki/RuntimeCorei7M620_2012_02.attach/scale.png ||
|| http://java-matrix-benchmark.googlecode.com/svn/wiki/RuntimeCorei7M620_2012_02.attach/mult.png || http://java-matrix-benchmark.googlecode.com/svn/wiki/RuntimeCorei7M620_2012_02.attach/multTranB.png ||
|| http://java-matrix-benchmark.googlecode.com/svn/wiki/RuntimeCorei7M620_2012_02.attach/det.png|| http://java-matrix-benchmark.googlecode.com/svn/wiki/RuntimeCorei7M620_2012_02.attach/tranSq.png ||
|| http://java-matrix-benchmark.googlecode.com/svn/wiki/RuntimeCorei7M620_2012_02.attach/inv.png || http://java-matrix-benchmark.googlecode.com/svn/wiki/RuntimeCorei7M620_2012_02.attach/invSymmPosDef.png ||

==Java: Solving Linear Systems==

|| http://java-matrix-benchmark.googlecode.com/svn/wiki/RuntimeCorei7M620_2012_02.attach/solveEq.png ||http://java-matrix-benchmark.googlecode.com/svn/wiki/RuntimeCorei7M620_2012_02.attach/solveOver.png||

==Java: Matrix Decompositions==

|| http://java-matrix-benchmark.googlecode.com/svn/wiki/RuntimeCorei7M620_2012_02.attach/svd.png || http://java-matrix-benchmark.googlecode.com/svn/wiki/RuntimeCorei7M620_2012_02.attach/EigSymm.png ||


----
= Mixed Java and Native Libraries =

These results show the performance of libraries that either use pure Java or calls to native libraries.

http://java-matrix-benchmark.googlecode.com/svn/wiki/RuntimeCorei7M620_2012_02.attach/native/summary.png

==Java: Basic Operation Results==

|| http://java-matrix-benchmark.googlecode.com/svn/wiki/RuntimeCorei7M620_2012_02.attach/native/add.png || http://java-matrix-benchmark.googlecode.com/svn/wiki/RuntimeCorei7M620_2012_02.attach/native/scale.png ||
|| http://java-matrix-benchmark.googlecode.com/svn/wiki/RuntimeCorei7M620_2012_02.attach/native/mult.png || http://java-matrix-benchmark.googlecode.com/svn/wiki/RuntimeCorei7M620_2012_02.attach/native/multTranB.png ||
|| http://java-matrix-benchmark.googlecode.com/svn/wiki/RuntimeCorei7M620_2012_02.attach/native/det.png || http://java-matrix-benchmark.googlecode.com/svn/wiki/RuntimeCorei7M620_2012_02.attach/native/tranSq.png ||
|| http://java-matrix-benchmark.googlecode.com/svn/wiki/RuntimeCorei7M620_2012_02.attach/native/inv.png || http://java-matrix-benchmark.googlecode.com/svn/wiki/RuntimeCorei7M620_2012_02.attach/native/invSymmPosDef.png ||


==Java: Solving Linear Systems==

|| http://java-matrix-benchmark.googlecode.com/svn/wiki/RuntimeCorei7M620_2012_02.attach/native/solveEq.png ||http://java-matrix-benchmark.googlecode.com/svn/wiki/RuntimeCorei7M620_2012_02.attach/native/solveOver.png||

==Java: Matrix Decompositions==

|| http://java-matrix-benchmark.googlecode.com/svn/wiki/RuntimeCorei7M620_2012_02.attach/native/svd.png || http://java-matrix-benchmark.googlecode.com/svn/wiki/RuntimeCorei7M620_2012_02.attach/native/EigSymm.png ||